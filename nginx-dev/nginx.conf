# NOTE: This config is for the dev environment only!

worker_processes 4;
pid /tmp/nginx.pid;
error_log stderr info;

events {
    multi_accept on;
    worker_connections 4096;
}

http {
    access_log /dev/stdout combined;

    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    client_body_buffer_size 4M;  # Don't write to a temp file for small files

    include mime.types;
    default_type application/octet-stream;

    # Allow nginx to run as an unprivileged user
    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_body_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # From Mozilla ssl-config-generator.
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    # Intersection of Mozilla ssl-config-generator and OWASP A config,
    # along with a couple TLSv1.3 ones that only exist in the OWASP config.
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_prefer_server_ciphers on;

    ssl_dhparam "/etc/nginx/ssl/dhparam.pem";

    # HSTS (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=5m;  # TODO run a dnscrypt proxy in another container and use that
    resolver_timeout 2s;

    # Disallow rendering us in external frames/iframes.
    add_header X-Frame-Options "deny" always;

    # No mime type sniffing pls
    add_header X-Content-Type-Options "nosniff" always;

    # Override user XSS filter settings
    add_header X-XSS-Protection "1; mode=block" always;

    # TODO get rid of inline event handlers and remove unsafe-inline
    add_header Content-Security-Policy "default-src 'self'; frame-src https://www.google.com/recaptcha/; object-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com/ajax/libs/sjcl/1.0.6/ https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/ https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/; block-all-mixed-content" always;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    server {
        listen 8080 default_server;
        listen [::]:8080 default_server ipv6only=on;

        return 301 https://$host$request_uri;
    }

    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2 ipv6only=on;
        server_name localhost;

        ssl_certificate "/etc/nginx/ssl/dev.crt";
        ssl_certificate_key "/etc/nginx/ssl/dev.key";

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://lambda:8080/;
        }
    }
}